name: CI

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  RUBY_VERSION: '3.2.2'
  NODE_VERSION: '20'
  BUNDLE_PATH: vendor/bundle

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle config and install
        run: |
          bundle config path vendor/bundle
          bundle lock --add-platform x86_64-linux
          bundle install --jobs 4

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bundle exec brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle config and install
        run: |
          bundle config path vendor/bundle
          bundle lock --add-platform x86_64-linux
          bundle install --jobs 4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bundle exec bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle config and install
        run: |
          bundle config path vendor/bundle
          bundle lock --add-platform x86_64-linux
          bundle install --jobs 4

      - name: Lint code for consistent style
        run: |
          bundle exec rubocop -a -f github
          bundle exec rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle config and install
        run: |
          bundle config path vendor/bundle
          bundle lock --add-platform x86_64-linux
          bundle install --jobs 4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Cache Chrome
        uses: actions/cache@v4
        with:
          path: /usr/bin/chromium-browser
          key: ${{ runner.os }}-chrome

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libpq-dev nodejs yarn chromium-browser chromium-chromedriver

      - name: Set up test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          bin/rails db:create
          bin/rails db:schema:load

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          CHROME_HEADLESS: true
          COVERAGE: true
          PARALLEL_WORKERS: 2
        run: |
          bin/rails test
          bin/rails test:system

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: coverage/

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-system-test-screenshots
          path: tmp/screenshots/

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor/bundle
            node_modules
            /usr/bin/chromium-browser
          key: ${{ runner.os }}-deps-${{ hashFiles('**/Gemfile.lock', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-
